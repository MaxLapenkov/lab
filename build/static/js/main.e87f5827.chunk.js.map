{"version":3,"sources":["api/index.js","App.js","index.js"],"names":["appBase","App","useState","peopleList","setPeopleList","setFileList","name","address","email","phone","inputValue","setInputValue","fileValue","setFileValue","useEffect","fetch","then","response","json","handleChangeInputValue","event","type","target","value","listItems","map","item","className","id","onChange","onClick","data","method","body","JSON","stringify","console","log","document","files","formData","FormData","append","split","pop","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e87f5827.chunk.js","sourcesContent":["const appBase =  'https://lab4and5.herokuapp.com/';\r\n\r\nexport const getList = () => fetch(`${appBase}emp`)\r\nexport const getFiles = () => fetch(`${appBase}file`)\r\nexport const postEmp = (data) => fetch(`${appBase}add_emp`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(data)\r\n})\r\nexport const postFile = (data) => fetch(`${appBase}add_file`, {\r\n    method: 'POST',\r\n    body: data\r\n})\r\n","import React, { useState, useEffect } from 'react';\nimport { getList, getFiles, postEmp, postFile } from './api';\n\nimport './App.css';\n\nfunction App() {\n  const [peopleList, setPeopleList] = useState([]);\n  const [fileList, setFileList] = useState([]);\n  const [inputValue, setInputValue] = useState({\n    name: '',\n    address: '',\n    email: '',\n    phone: ''\n  })\n  const [fileValue, setFileValue] = useState();\n\n  //Получение данных при загрузке\n    useEffect(() => {\n        getList().then(response => response.json())\n            .then(json => setPeopleList(json))\n        getFiles().then(response => response.json())\n            .then(json => setFileList(json))\n    }, [])\n\n\n    //Обработка вводимых данных о человеке\n    const handleChangeInputValue = (event, type) => {\n      if(type === 'name') {\n        setInputValue({\n          ...inputValue,\n          name: event.target.value \n        });\n      }\n      if(type === 'address') {\n        setInputValue({\n          ...inputValue,\n          address: event.target.value \n        });\n      }\n      if(type === 'email') {\n        setInputValue({\n          ...inputValue,\n          email: event.target.value \n        });\n      }\n      if(type === 'phone') {\n        setInputValue({\n          ...inputValue,\n          phone: event.target.value \n        });\n      }\n    }\n\n    //Обработка вводимого файла\n    const handleChangeFileValue = (event) => {\n      setFileValue({\n        document: event.target.files[0],\n        name: event.target.files[0].name\n      })\n    }\n\n    const handleSendInputData = () => {\n      if(inputValue.name) {\n        postEmp(inputValue).then((response) => console.log(response))\n      }\n    }\n\n    const handleSendFile = () => {\n      if (fileValue) {\n        const formData = new FormData();\n        formData.append('data', fileValue.document)\n        formData.append('file_name', fileValue.name)\n        formData.append('extencion', `.${fileValue.name.split('.').pop()}`)\n        postFile(formData)\n      } \n    }\n\n    //Список с людьми\n    const listItems = peopleList.map((item) => {\n      return (\n        <div key={item.id} className='item'>\n          <p>Имя: {item.name}</p>\n          <p>Почта: {item.email}</p>\n          <p>Адрес: {item.address}</p>\n          <p>Телефон: {item.phone}</p>\n        </div>\n      )      \n  })\n\n    return (\n      <div className='app'>\n        <div className=\"content\">\n          <div className=\"list\">\n            <h2>Люди</h2>\n               {listItems}\n          </div>\n          <div className=\"images\">\n            <h2>Файлы</h2>\n              rfhn\n          </div>\n        </div>       \n          <div className=\"form-container\">\n          <form className=\"form\">\n            <label>\n              <h6>Введите имя</h6>\n              <input className=\"input\" type=\"text\" value={inputValue.name} onChange={(event) => handleChangeInputValue(event, 'name')}/>\n            </label>\n            <label>\n              <h6>Введите адрес</h6>\n              <input className=\"input\" type=\"text\" value={inputValue.address} onChange={(event) => handleChangeInputValue(event, 'address')}/>\n            </label>\n            <label>\n              <h6>Введите почту</h6>\n              <input className=\"input\" type=\"email\" value={inputValue.email} onChange={(event) => handleChangeInputValue(event, 'email')}/>\n            </label>\n            <label>\n              <h6>Введите телефон</h6>\n              <input className=\"input\" type=\"text\" value={inputValue.phone} onChange={(event) => handleChangeInputValue(event, 'phone')}/>\n            </label>\n            <button className=\"button\" type=\"button\" onClick={handleSendInputData}>\n              Отправить текст\n            </button>\n          </form>\n          <form className=\"form\">\n            <h6>Отправьте файл</h6>\n            <input className='input' type='file' onChange={handleChangeFileValue}/>\n            <button className=\"button\" type=\"button\" onClick={handleSendFile}>\n              Отправить файл\n            </button>\n          </form>\n          </div>\n      </div>\n      \n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}