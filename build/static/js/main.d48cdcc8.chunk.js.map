{"version":3,"sources":["api/index.js","App.js","index.js"],"names":["appBase","getList","fetch","App","useState","peopleList","setPeopleList","name","email","address","phone","inputValue","setInputValue","useEffect","then","response","json","handleChangeInputValue","event","type","target","value","listItems","map","item","className","id","onChange","onClick","data","method","headers","body","JSON","stringify","ok","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAMA,EAAW,kCAEJC,EAAU,kBAAMC,MAAM,GAAD,OAAIF,EAAJ,S,eC8InBG,MA3If,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,OAEmBF,mBAAS,IAF5B,gCAGuBA,mBAAS,CAC3CG,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,MAAO,MAPI,mBAGNC,EAHM,KAGMC,EAHN,OASqBR,qBATrB,6BAYXS,qBAAU,WACNZ,IAAUa,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC/BF,MAAK,SAAAE,GAAI,OAAIV,EAAcU,QAGjC,IAIH,IAAMC,EAAyB,SAACC,EAAOC,GACzB,SAATA,GACDP,EAAc,2BACTD,GADQ,IAEXJ,KAAMW,EAAME,OAAOC,SAGX,YAATF,GACDP,EAAc,2BACTD,GADQ,IAEXF,QAASS,EAAME,OAAOC,SAGd,UAATF,GACDP,EAAc,2BACTD,GADQ,IAEXH,MAAOU,EAAME,OAAOC,SAGZ,UAATF,GACDP,EAAc,2BACTD,GADQ,IAEXD,MAAOQ,EAAME,OAAOC,UAqCpBC,EAAYjB,EAAWkB,KAAI,SAACC,GAChC,OACE,sBAAmBC,UAAU,OAA7B,UACE,qCAAQD,EAAKE,MACb,qDAASF,EAAKjB,QACd,iEAAWiB,EAAKhB,SAChB,iEAAWgB,EAAKf,WAChB,6EAAae,EAAKd,WALVc,EAAKE,OAUnB,OACE,sBAAKD,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,0DACIH,OAON,qBAAKG,UAAU,iBAAf,SACA,uBAAMA,UAAU,OAAhB,UACE,kCACE,+FACA,uBAAOA,UAAU,QAAQN,KAAK,OAAOE,MAAOV,EAAWJ,KAAMoB,SAAU,SAACT,GAAD,OAAWD,EAAuBC,EAAO,cAElH,kCACE,2GACA,uBAAOO,UAAU,QAAQN,KAAK,OAAOE,MAAOV,EAAWF,QAASkB,SAAU,SAACT,GAAD,OAAWD,EAAuBC,EAAO,iBAErH,kCACE,2GACA,uBAAOO,UAAU,QAAQN,KAAK,QAAQE,MAAOV,EAAWH,MAAOmB,SAAU,SAACT,GAAD,OAAWD,EAAuBC,EAAO,eAEpH,kCACE,uHACA,uBAAOO,UAAU,QAAQN,KAAK,OAAOE,MAAOV,EAAWD,MAAOiB,SAAU,SAACT,GAAD,OAAWD,EAAuBC,EAAO,eAEnH,wBAAQO,UAAU,SAASN,KAAK,SAASS,QAhErB,WD3DT,IAACC,EC4DflB,EAAWJ,OD5DIsB,EC6DRlB,ED7DiBT,MAAM,GAAD,OAAIF,EAAJ,WAAsB,CACxD8B,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUL,MCwDGf,MAAK,SAACC,GACrBA,EAASoB,IACVlC,IAAUa,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACjCF,MAAK,SAAAE,GAAI,OAAIV,EAAcU,UA2D9B,4GC1HZoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d48cdcc8.chunk.js","sourcesContent":["const appBase =  'https://lab4and5.herokuapp.com/';\r\n\r\nexport const getList = () => fetch(`${appBase}emp`)\r\nexport const getFiles = () => fetch(`${appBase}file`)\r\nexport const postEmp = (data) => fetch(`${appBase}add_emp`, {\r\n    method: 'POST',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(data)\r\n})\r\nexport const postFile = (data) => fetch(`${appBase}add_file`, {\r\n    method: 'POST',\r\n    body: data\r\n})\r\n","import React, { useState, useEffect } from 'react';\nimport { getList, getFiles, postEmp, postFile } from './api';\n\nimport './App.css';\n\nfunction App() {\n  const [peopleList, setPeopleList] = useState([]);\n  const [fileList, setFileList] = useState([]);\n  const [inputValue, setInputValue] = useState({\n    name: '',\n    email: '',\n    address: '',\n    phone: ''\n  })\n  const [fileValue, setFileValue] = useState();\n\n  //Получение данных при загрузке\n    useEffect(() => {\n        getList().then(response => response.json())\n            .then(json => setPeopleList(json))\n        // getFiles().then(response => response.json())\n        //     .then(json => setFileList(json))\n    }, [])\n\n\n    //Обработка вводимых данных о человеке\n    const handleChangeInputValue = (event, type) => {\n      if(type === 'name') {\n        setInputValue({\n          ...inputValue,\n          name: event.target.value \n        });\n      }\n      if(type === 'address') {\n        setInputValue({\n          ...inputValue,\n          address: event.target.value \n        });\n      }\n      if(type === 'email') {\n        setInputValue({\n          ...inputValue,\n          email: event.target.value \n        });\n      }\n      if(type === 'phone') {\n        setInputValue({\n          ...inputValue,\n          phone: event.target.value \n        });\n      }\n    }\n\n    //Обработка вводимого файла\n    const handleChangeFileValue = (event) => {\n      setFileValue({\n        document: event.target.files[0],\n        name: event.target.files[0].name\n      })\n    }\n\n\n    //Отправка данных о человеке\n    const handleSendInputData = () => {\n      if(inputValue.name) {\n        postEmp(inputValue).then((response) => {\n          if(response.ok) {\n            getList().then(response => response.json())\n              .then(json => setPeopleList(json))\n          }\n        })\n      }\n    }\n\n    const handleSendFile = () => {\n      if (fileValue) {\n        const formData = new FormData();\n        formData.append('data', fileValue.document)\n        formData.append('file_name', fileValue.name)\n        formData.append('extencion', `.${fileValue.name.split('.').pop()}`)\n        postFile(formData)\n      } \n    }\n\n    //Список с людьми\n    const listItems = peopleList.map((item) => {\n      return (\n        <div key={item.id} className='item'>\n          <p>ID: {item.id}</p>\n          <p>Имя: {item.name}</p>\n          <p>Почта: {item.email}</p>\n          <p>Адрес: {item.address}</p>\n          <p>Телефон: {item.phone}</p>\n        </div>\n      )      \n  })\n\n    return (\n      <div className='app'>\n        <div className=\"content\">\n          <div className=\"list\">\n            <h2>Люди</h2>\n               {listItems}\n          </div>\n          {/* <div className=\"images\">\n            <h2>Файлы</h2>\n              rfhn\n          </div> */}\n        </div>       \n          <div className=\"form-container\">\n          <form className=\"form\">\n            <label>\n              <h6>Введите имя</h6>\n              <input className=\"input\" type=\"text\" value={inputValue.name} onChange={(event) => handleChangeInputValue(event, 'name')}/>\n            </label>\n            <label>\n              <h6>Введите адрес</h6>\n              <input className=\"input\" type=\"text\" value={inputValue.address} onChange={(event) => handleChangeInputValue(event, 'address')}/>\n            </label>\n            <label>\n              <h6>Введите почту</h6>\n              <input className=\"input\" type=\"email\" value={inputValue.email} onChange={(event) => handleChangeInputValue(event, 'email')}/>\n            </label>\n            <label>\n              <h6>Введите телефон</h6>\n              <input className=\"input\" type=\"text\" value={inputValue.phone} onChange={(event) => handleChangeInputValue(event, 'phone')}/>\n            </label>\n            <button className=\"button\" type=\"button\" onClick={handleSendInputData}>\n              Отправить текст\n            </button>\n          </form>\n          {/* <form className=\"form\">\n            <h6>Отправьте файл</h6>\n            <input className='input' type='file' onChange={handleChangeFileValue}/>\n            <button className=\"button\" type=\"button\" onClick={handleSendFile}>\n              Отправить файл\n            </button>\n          </form> */}\n          </div>\n      </div>\n      \n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}