{"version":3,"sources":["App.js","api/index.js","index.js"],"names":["App","useState","list","setList","inputValue","setInputValue","fileValue","setFileValue","useEffect","fetch","then","response","json","slice","listItems","map","item","title","id","formData","FormData","append","document","name","console","log","get","className","type","value","onChange","event","target","files","ReactDOM","render","StrictMode","getElementById"],"mappings":"wLA0EeA,MArEf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEuBF,mBAAS,IAFhC,mBAENG,EAFM,KAEMC,EAFN,OAGqBJ,qBAHrB,mBAGNK,EAHM,KAGKC,EAHL,KAKXC,qBAAU,WCVeC,MAAM,8CDWjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC/BF,MAAK,SAAAE,GAAI,OAAIT,EAAQS,EAAKC,MAAM,EAAG,UACzC,IAEH,IAAMC,EAAYZ,EAAKa,KAAI,SAACC,GACxB,OAAO,4BAAkBA,EAAKC,OAAfD,EAAKE,OAexB,GAAGZ,EAAW,CACZ,IAAMa,EAAW,IAAIC,SACrBD,EAASE,OAAO,WAAYf,EAAUgB,UACtCH,EAASE,OAAO,OAAQf,EAAUiB,MAClCC,QAAQC,IAAIN,EAASO,IAAI,SAI3B,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,OAAf,UACE,gEACIb,KAEN,sBAAKa,UAAU,SAAf,UACE,gEADF,aAKA,sBAAKA,UAAU,iBAAf,UACA,uBAAMA,UAAU,OAAhB,UACE,kCACE,2GACA,uBAAOA,UAAU,QAAQC,KAAK,OAAOC,MAAOzB,EAAY0B,SApCnC,SAACC,GAC9B1B,EAAc0B,EAAMC,OAAOH,aAqCrB,wBAAQF,UAAU,SAASC,KAAK,SAAhC,sGAIF,uBAAMD,UAAU,OAAhB,UACE,iHACA,uBAAOA,UAAU,QAAQC,KAAK,OAAOE,SAxCf,SAACC,GAE7BxB,EAAa,CACXe,SAAUS,EAAMC,OAAOC,MAAM,GAC7BV,KAAMQ,EAAMC,OAAOC,MAAM,GAAGV,UAqCxB,wBAAQI,UAAU,SAASC,KAAK,SAAhC,uGE3DZM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASe,eAAe,U","file":"static/js/main.af133c8a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getList } from './api';\n\nimport './App.css';\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const [inputValue, setInputValue] = useState('')\n  const [fileValue, setFileValue] = useState();\n\n    useEffect(() => {\n        getList().then(response => response.json())\n            .then(json => setList(json.slice(0, 10)))\n    }, [])\n\n    const listItems = list.map((item) => {\n        return <p key={item.id}>{item.title}</p>\n    })\n\n    const handleChangeInputValue = (event) => {\n      setInputValue(event.target.value);\n    }\n\n    const handleChangeFileValue = (event) => {\n\n      setFileValue({\n        document: event.target.files[0],\n        name: event.target.files[0].name\n      })\n    }\n\n    if(fileValue) {\n      const formData = new FormData();\n      formData.append('document', fileValue.document)\n      formData.append('name', fileValue.name)\n      console.log(formData.get('name'));\n    }\n    \n\n    return (\n      <div className='app'>\n        <div className=\"content\">\n          <div className=\"list\">\n            <h2>Текст</h2>\n               {listItems}\n          </div>\n          <div className=\"images\">\n            <h2>Файлы</h2>\n              rfhn\n          </div>\n        </div>       \n          <div className=\"form-container\">\n          <form className=\"form\">\n            <label>\n              <h6>Введите текст</h6>\n              <input className=\"input\" type=\"text\" value={inputValue} onChange={handleChangeInputValue}/>\n            </label>\n            <button className=\"button\" type=\"button\">\n              Отправить текст\n            </button>\n          </form>\n          <form className=\"form\">\n            <h6>Отправьте файл</h6>\n            <input className='input' type='file' onChange={handleChangeFileValue}/>\n            <button className=\"button\" type=\"button\" >\n              Отправить файл\n            </button>\n          </form>\n          </div>\n      </div>\n      \n    )\n}\n\nexport default App;\n","export const getList = () => fetch('https://jsonplaceholder.typicode.com/todos')","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}